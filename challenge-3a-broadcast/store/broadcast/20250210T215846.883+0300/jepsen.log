2025-02-10 21:58:46,934{GMT}	INFO	[jepsen test runner] jepsen.core: Test version 9b03e894a6dcfe760c6d971257fd3665b7827f25 (plus uncommitted changes)
2025-02-10 21:58:46,935{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /home/dvoid/go/bin/maelstrom-broadcast --node-count 1 --time-limit 20 --rate 10
2025-02-10 21:58:47,162{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 1
 :availability nil
 :max-txn-length 4
 :concurrency 1
 :db
 #object[maelstrom.db$db$reify__16612
         "0x7b159d1b"
         "maelstrom.db$db$reify__16612@7b159d1b"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x26c9225a" "2025-02-10T21:58:46.883+03:00"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15721
         "0x10ba757f"
         "maelstrom.net$jepsen_net$reify__15721@10ba757f"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__17142
         "0x711cd6f9"
         "maelstrom.workload.broadcast$client$reify__17142@711cd6f9"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x1cb3de26"
         "java.util.concurrent.CyclicBarrier@1cb3de26"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11089
         "0x7307e418"
         "jepsen.checker$compose$reify__11089@7307e418"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/home/dvoid/go/bin/maelstrom-broadcast"
  "--node-count"
  "1"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16905@30d5668a"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16886@2769d577"]})
 :nodes ["n0"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/home/dvoid/go/bin/maelstrom-broadcast"
 :generator
 #object[jepsen.util.Forgettable
         "0x3bc57af4"
         ((jepsen.generator.Synchronize
           {:gen (jepsen.generator.TimeLimit
                  {:limit 20000000000,
                   :cutoff nil,
                   :gen (jepsen.generator.Any
                         {:gens [(jepsen.generator.OnThreads
                                  {:f #{:nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x7be29ac4"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@7be29ac4"],
                                   :gen nil})
                                 (jepsen.generator.OnThreads
                                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                                           "0x2523730b"
                                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@2523730b"],
                                   :gen (jepsen.generator.Stagger
                                         {:dt 200000000,
                                          :next-time nil,
                                          :gen (jepsen.generator.Mix
                                                {:i 0,
                                                 :gens [({:f :broadcast,
                                                          :value 0}
                                                         {:f :broadcast,
                                                          :value 1}
                                                         {:f :broadcast,
                                                          :value 2}
                                                         {:f :broadcast,
                                                          :value 3}
                                                         {:f :broadcast,
                                                          :value 4}
                                                         {:f :broadcast,
                                                          :value 5}
                                                         {:f :broadcast,
                                                          :value 6}
                                                         {:f :broadcast,
                                                          :value 7}
                                                         ...)
                                                        ({:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         {:f :read}
                                                         ...)]})})})]})})})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #{:nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0xba65354"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@ba65354"],
                   :gen ()})})
          (jepsen.generator.Synchronize
           {:gen {:type :log, :value "Waiting for recovery..."}})
          (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
          (jepsen.generator.Synchronize
           {:gen (jepsen.generator.OnThreads
                  {:f #jepsen.generator.context.AllBut{:element :nemesis},
                   :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__12077
                                           "0x647dcc5e"
                                           "jepsen.generator.context$make_thread_filter$lazy_filter__12077@647dcc5e"],
                   :gen (jepsen.generator.EachThread
                         {:fresh-gen {:f :read, :final? true},
                          :context-filters #object[clojure.core$promise$reify__8621
                                                   "0x5af850f1"
                                                   {:status :pending, :val nil}],
                          :gens {}})})}))]
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15724
         "0x3b6f7ab3"
         "maelstrom.net$jepsen_os$reify__15724@3b6f7ab3"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2025-02-10 21:58:52,130{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2025-02-10 21:58:52,133{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2025-02-10 21:58:52,135{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2025-02-10 21:58:52,143{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2025-02-10 21:58:52,148{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2025-02-10 21:58:52,149{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /home/dvoid/go/bin/maelstrom-broadcast []
2025-02-10 21:58:53,150{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2025-02-10 21:58:53,155{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
java.io.IOException: Cannot run program "/home/dvoid/go/bin/maelstrom-broadcast" (in directory "/tmp"): error=2, No such file or directory
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1170)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1089)
	at maelstrom.process$start_node_BANG_.invokeStatic(process.clj:199)
	at maelstrom.process$start_node_BANG_.invoke(process.clj:168)
	at maelstrom.db$db$reify__16612.setup_BANG_(db.clj:34)
	at jepsen.db$fn__11614$G__11608__11618.invoke(db.clj:12)
	at jepsen.db$fn__11614$G__11607__11623.invoke(db.clj:12)
	at clojure.core$partial$fn__5927.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__9552.invoke(control.clj:319)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:145)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5837.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:411)
	at clojure.core$mapv$fn__8565.invoke(core.clj:7059)
	at clojure.lang.ArrayChunk.reduce(ArrayChunk.java:60)
	at clojure.core.protocols$fn__8270.invokeStatic(protocols.clj:135)
	at clojure.core.protocols$fn__8270.invoke(protocols.clj:123)
	at clojure.core.protocols$fn__8229$G__8224__8238.invoke(protocols.clj:19)
	at clojure.core.protocols$seq_reduce.invokeStatic(protocols.clj:31)
	at clojure.core.protocols$fn__8262.invokeStatic(protocols.clj:74)
	at clojure.core.protocols$fn__8262.invoke(protocols.clj:74)
	at clojure.core.protocols$fn__8203$G__8198__8216.invoke(protocols.clj:13)
	at clojure.core$reduce.invokeStatic(core.clj:6965)
	at clojure.core$mapv.invokeStatic(core.clj:7050)
	at clojure.core$mapv.invoke(core.clj:7050)
	at jepsen.control$on_nodes.invokeStatic(control.clj:316)
	at jepsen.control$on_nodes.invoke(control.clj:299)
	at jepsen.control$on_nodes.invokeStatic(control.clj:304)
	at jepsen.control$on_nodes.invoke(control.clj:299)
	at jepsen.db$cycle_BANG_$fn__11802.invoke(db.clj:179)
	at jepsen.db$cycle_BANG_.invokeStatic(db.clj:176)
	at jepsen.db$cycle_BANG_.invoke(db.clj:162)
	at jepsen.core$run_BANG_$fn__13912$fn__13915.invoke(core.clj:399)
	at jepsen.core$run_BANG_$fn__13912.invoke(core.clj:398)
	at jepsen.core$run_BANG_.invokeStatic(core.clj:396)
	at jepsen.core$run_BANG_.invoke(core.clj:322)
	at jepsen.cli$single_test_cmd$fn__15082.invoke(cli.clj:396)
	at jepsen.cli$run_BANG_.invokeStatic(cli.clj:329)
	at jepsen.cli$run_BANG_.invoke(cli.clj:258)
	at maelstrom.core$_main.invokeStatic(core.clj:269)
	at maelstrom.core$_main.doInvoke(core.clj:267)
	at clojure.lang.RestFn.applyTo(RestFn.java:140)
	at maelstrom.core.main(Unknown Source)
Caused by: java.io.IOException: error=2, No such file or directory
	at java.base/java.lang.ProcessImpl.forkAndExec(Native Method)
	at java.base/java.lang.ProcessImpl.<init>(ProcessImpl.java:295)
	at java.base/java.lang.ProcessImpl.start(ProcessImpl.java:225)
	at java.base/java.lang.ProcessBuilder.start(ProcessBuilder.java:1126)
	... 47 common frames omitted
